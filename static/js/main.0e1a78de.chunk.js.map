{"version":3,"sources":["Components/Navigation/Navigation.tsx","Components/PersonRow/PersonRow.tsx","Components/PeopleTable/PeopleTable.tsx","App.tsx","helpers.ts","index.tsx"],"names":["Navigation","className","to","exact","PersonRow","React","memo","index","name","sex","born","died","mother","father","slug","history","useHistory","century","Math","ceil","rowStyle","style","color","onClick","personSlug","push","pathname","titles","PeopleTable","people","useState","query","setQuery","location","useLocation","searchParams","URLSearchParams","search","sortBy","get","sortOrder","lowerCaseQuery","toLocaleLowerCase","useEffect","applyQueryWithDebounce","useCallback","debounce","queryDebounce","set","toString","visiblePeople","useMemo","filter","person","toLowerCase","includes","sortingType","sort","a","b","localeCompare","type","placeholder","value","onChange","target","map","title","key","sortOrderParam","setSortParam","fatherName","motherName","App","setPeople","fetch","then","response","json","data","path","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e1a78de.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Navigation.scss';\n\n\nexport const Navigation: React.FC = () => (\n  <header>\n    <nav className=\"Nav\">\n      <ul className=\"Nav__list\">\n        <li className=\"Nav__item\">\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"Nav__item\"\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"Nav__item\">\n          <NavLink\n            to=\"/people\"\n            className=\"Nav__item\"\n          >\n            People Page\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  index: number;\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  father: string;\n  mother: string;\n  slug: string;\n};\n\nexport const PersonRow: React.FC<Props> = React.memo(\n  ({\n    index, name, sex, born, died, mother, father, slug,\n  }) => {\n    const history = useHistory();\n\n    const century = Math.ceil(died / 100);\n    const rowStyle = sex === 'f' ? 'red' : 'blue';\n\n    const addSlug = (personSlug: string) => {\n      history.push({\n        pathname: `/people/${personSlug}`,\n      });\n    };\n\n    return (\n      <tr style={{ color: rowStyle }} onClick={() => addSlug(slug)}>\n        <td>{index}</td>\n        <td>{name}</td>\n        <td>{sex}</td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>{died - born}</td>\n        <td>{century}</td>\n        <td>{father}</td>\n        <td>{mother}</td>\n      </tr>\n    );\n  },\n);\n","import React, {\n  useState, useCallback, useEffect, useMemo,\n} from 'react';\nimport debounce from 'lodash.debounce';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Person } from '../../helpers';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nimport './PeopleTable.scss';\n\nconst titles: Array<string> = ['ID', 'Name', 'Sex', 'Born', 'Died', 'Age', 'Century', 'Father', 'Mother'];\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [query, setQuery] = useState('');\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy: string = searchParams.get('sortBy') || '';\n  const sortOrder: string = searchParams.get('sortOrder') || '';\n  const lowerCaseQuery = (searchParams.get('query') || '').toLocaleLowerCase();\n\n  useEffect(() => {\n    setQuery(lowerCaseQuery);\n  }, [lowerCaseQuery]);\n\n  const applyQueryWithDebounce = useCallback(\n    debounce((queryDebounce: string) => {\n      searchParams.set('query', queryDebounce);\n      history.push({ search: searchParams.toString() });\n    }, 1000),\n    [],\n  );\n\n  const visiblePeople = useMemo(\n    () => people.filter(person => (\n      person.name.toLowerCase().includes(lowerCaseQuery))),\n    [lowerCaseQuery, people],\n  );\n\n  const setSortParam = (title: string) => {\n    const sortOrderParam = (sortOrder === 'asc') ? 'desc' : 'asc';\n\n    if (titles.includes(title)) {\n      searchParams.set('sortBy', `${title}`);\n      searchParams.set('sortOrder', `${sortOrderParam}`);\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n  };\n\n  useMemo(() => {\n    const sortingType = sortBy.toLowerCase();\n\n    switch (sortOrder) {\n      case 'asc':\n        switch (sortingType) {\n          case 'born':\n          case 'died':\n            visiblePeople.sort((a, b) => a[sortingType] - b[sortingType]); break;\n\n          case 'name':\n          case 'sex':\n            visiblePeople.sort((a, b) => a[sortingType].localeCompare(b[sortingType])); break;\n\n          default:\n        }\n\n        break;\n      case 'desc':\n        switch (sortingType) {\n          case 'born':\n          case 'died':\n            visiblePeople.sort((a, b) => b[sortingType] - a[sortingType]); break;\n\n          case 'name':\n          case 'sex':\n            visiblePeople.sort((a, b) => b[sortingType].localeCompare(a[sortingType])); break;\n\n          default:\n        }\n\n        break;\n      default:\n    }\n  },\n  [people, sortOrder, sortBy]);\n\n  return (\n    <div className=\"people__container\">\n      <h1>People Table</h1>\n\n      <div className=\"search__container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search person...\"\n          value={query}\n          onChange={({ target }) => {\n            setQuery(target.value);\n            applyQueryWithDebounce(target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"people__table\">\n        <table>\n          <thead>\n            <tr>\n              {titles.map(title => (\n                <th key={title}>\n                  <button\n                    type=\"button\"\n                    onClick={() => setSortParam(title)}\n                  >\n                    <span>{`${title} â‡…`}</span>\n                  </button>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {visiblePeople.map(({\n              name, sex, born, died, fatherName, motherName, slug,\n            }, index) => (\n              <PersonRow\n                key={slug}\n                index={index + 1}\n                name={name}\n                sex={sex}\n                born={born}\n                died={died}\n                father={fatherName}\n                mother={motherName}\n                slug={slug}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { Navigation } from './Components/Navigation/Navigation';\nimport { PeopleTable } from './Components/PeopleTable/PeopleTable';\n\nimport { getPeople, Person } from './helpers';\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact component={() => <h1>Home</h1>} />\n        <Route\n          path=\"/people/:personSlug?\"\n          render={() => <PeopleTable people={people} />}\n        />\n        <Redirect from=\"home\" to=\"/\" />\n        <Route component={() => <h1>Not found</h1>} />\n      </Switch>\n    </div>\n  );\n};\n\n\nexport default App;\n","const PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(PEOPLE_URL)\n    .then(response => response.json());\n};\n\nexport type Person = {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  fatherName: string;\n  motherName: string;\n  slug: string;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}